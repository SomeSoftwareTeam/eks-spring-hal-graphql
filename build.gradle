buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'mysql:mysql-connector-java'
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "6.3.2"
}

group = 'com.somesoftwareteam'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

repositories {
	jcenter()
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	// graphql
	// TODO: remove graphql-spring-boot-starter whenever graphql-spqr-spring-boot-starter is updated
	implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:5.7.1'
	implementation 'io.leangen.graphql:graphql-spqr-spring-boot-starter:0.0.4'
	implementation 'com.graphql-java:graphql-java-extended-scalars:1.0'
	// hibernate
	implementation "com.vladmihalcea:hibernate-types-52:1.0.0"
	implementation 'org.hibernate:hibernate-spatial:5.4.2.Final'
	// spring
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework:spring-context-support'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.security:spring-security-data'
	implementation 'org.springframework.security:spring-security-config'
	implementation 'org.springframework.security:spring-security-acl'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	// access control
	implementation 'net.sf.ehcache:ehcache-core:2.6.11'
	// database
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'mysql:mysql-connector-java'
	// auth
	implementation "com.auth0:java-jwt:3.4.0"
	// test containers https://www.testcontainers.org/quickstart/junit_5_quickstart/
	def junitJupiterVersion = '5.4.2'
	testCompile "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
	testCompile "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
	testCompile "org.testcontainers:testcontainers:1.14.3"
	testCompile "org.testcontainers:junit-jupiter:1.14.3"
	testCompile "org.testcontainers:mysql:1.14.3"
	// test
	testImplementation 'com.graphql-java-kickstart:graphql-spring-boot-starter-test:5.7.1'
	testImplementation 'io.projectreactor:reactor-test'
	implementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

flyway {
	url = "$System.env.SPRING_DATASOURCE_URL"
	user = "$System.env.SPRING_DATASOURCE_USERNAME"
	password = "$System.env.SPRING_DATASOURCE_PASSWORD"
}